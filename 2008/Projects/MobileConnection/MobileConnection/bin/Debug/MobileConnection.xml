<?xml version="1.0"?>
<doc>
<assembly>
<name>
MobileConnection
</name>
</assembly>
<members>
<member name="M:MobileConnection.clsSqlConn.configStringConnection(System.String[])">
	<summary>
 Monta a string de conexão a partir de um array contendo os dados nescessários.
 </summary>
	<param name="array"> Array preenchido com o padrão sql de string de conexão</param>
	<exemplo>
 
  Itens padrão a ser usada : 
  Provider=SQLOLEDB.1
  Password=senha
  Persist Security Info=False/True
  User ID=usuario
  Initial Catalog=basededados
  Data Source=ip
 
 </exemplo>
</member><member name="M:MobileConnection.clsSqlConn.configStringConnection(System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>
 Redefine os atributos da string de conexão
 </summary>
	<param name="strPassword"></param>
	<param name="strUserID"></param>
	<param name="strInitialCatalog"></param>
	<param name="strDataSource"></param>
	<param name="booSecurity">Optional ---True or False</param>
	<remarks></remarks>
</member><member name="P:MobileConnection.My.Resources.Resources.ResourceManager">
	<summary>
   Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MobileConnection.My.Resources.Resources.Culture">
	<summary>
   Overrides the current thread's CurrentUICulture property for all
   resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:MobileConnection.My.Resources.Resources">
	<summary>
   A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:MobileConnection.frmLogin.validaAcesso(System.String,System.String)">
	<summary>
 Válida o acesso ao sistema
 </summary>
	<param name="usuario">Usuário contido na base de dados</param>
	<param name="senha">Senha contida na base de dados</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.frmLogin.pbLoginConfig(System.Windows.Forms.PictureBox,System.Windows.Forms.Form,System.Windows.Forms.ImageList@,System.Int32)">
	<summary>
 Configura o Picture Box (pbLogin) com a imagens passada como parâmetro
 </summary>
	<param name="pb"></param>
	<param name="frm"></param>
	<param name="imglist"></param>
	<param name="imgIndex"></param>
	<remarks></remarks>
</member><member name="M:MobileConnection.frmLogin.preencheComboBoxUsuario(System.Windows.Forms.ComboBox,System.Collections.ArrayList,MobileConnection.clsUsuario.usuarioPropety)">
	<summary>
 Carrega uma Combo com uma das propriedades(Codigo,Nome ou NomeCompleto) de um objeto cslUsuario
 </summary>
	<param name="cb">ComboBox a ser prenchido</param>
	<param name="list">Array List previamente carregada</param>
	<param name="propriedade">Uma das propriedades do objeto usuário (Codigo,Nome ou NomeCompleto)</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.frmLogin.strConnectionConfig">
	<summary>
 Configura os parametros da string de conexão.
 </summary>
	<remarks>
 Verifica se o arquivo que contém o string de conexão existe:
 Lê o arquivo e o coloca em uma string que é devolvida em um ArrayList
 Gera um array, realizando um split na string contida na variável
 utiliza a classe statica clsSqlConn para definir os parâmetros da string de conexão
 configura a string de conexão na classe static clsSqlConn
 </remarks>
</member><member name="M:MobileConnection.clsFile.#ctor">
	<summary>
 'Ao ser instanciada configura um caminho padrão e um arquivo padrão onde será buscado o arquivo .txt contendo a string de conexão
 </summary>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.#ctor(System.String,System.String)">
	<summary>
 Ao ser instanciada configura um caminho e um nome de arquivo 
 de acordo com os parâmetros informados. 
 </summary>
	<param name="strPathMobile">Path no dispositivo mobile</param>
	<param name="strFileName">Nome de um arquivo de text existente no Path informado</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.salvarArquivoTexto(System.String)">
	<summary>
 Criar um arquivo de texto
 </summary>
	<param name="strTexto">Texto a ser salvo no arquivo</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.gerarTextFile(System.String,System.Collections.ArrayList)">
	<summary>
 Recebe um objeto Produto e salva um arquivo de texto separado por | entre cada parâmetro
 </summary>
	<param name="strTexto"></param>
	<param name="listaProduto">Array list com objetos Produto.</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.readTextFile">
	<summary>
 Lê um arquivo de texto disponível na rede
 </summary>
	<returns>Um array list contendo os dados do arquivo de texto</returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.readTextFile(System.String,System.String)">
	<summary>
 Lê um arquivo de texto disponível na rede
 </summary>
	<returns>Um array list contendo os dados do arquivo de texto</returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.getFileOnDirectory(System.String,System.String)">
	<summary>
 Recupera um arquivo em um caminho informado no parametro Fullpath do objeto
 </summary>
	<param name="extensao">tipo de extensão do arquivo a ser encontrado  EX= ".txt"</param>
	<param name="strArquivo">String parte do nome do arquivo a ser buscado para que seja feita uma verificação antes de retornar o arquivo</param>
	<returns>Arraylist de String contendo o nome dos arquivos encontrados no diretório</returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.getArquivosDiretorio(System.String,System.String)">
	<summary>
 Recupera um arquivo em um caminho informado no parametro Fullpath do objeto
 </summary>
	<param name="extensao">tipo de extensão do arquivo a ser encontrado  EX= ".txt"</param>
	<param name="strArquivo">String parte do nome do arquivo a ser buscado para que seja feita uma verificação antes de retornar o arquivo</param>
	<returns>Arraylist de String contendo o nome dos arquivos encontrados no diretório</returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.getDiretorio">
	<summary>
 Retorna os diretórios existentes no caminho informado
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.arrayOfTextFile(System.String,MobileConnection.clsFile.splitType)">
	<summary>
 Gera um array a partir de uma string sendo nescessário indicar apenas o tipo de caracter que irá servir como split
 </summary>
	<param name="strFile">String da qual será gerado a Array de string</param>
	<param name="splitCaracter">Tipo de caracter a ser usado como separador no split</param>
	<returns>Array preenchido com valores do tipo string de acordo com a quantidade de separadores encontrados na string </returns>
	<remarks></remarks>
	<exemplo>   
 string = "text1/text2/text3/text4/text5" onde o separador e o caracter "/"
 
 o retorno será um array com 5 posições
 string(0)= text1
 string(1)= text2
 string(2)= text3
 string(3)= text4
 string(4)= text5
 </exemplo>
</member><member name="M:MobileConnection.clsFile.AddText(System.IO.FileStream,System.String)">
	<summary>
 Utilizado para montar um arquivo de texto
 </summary>
	<param name="fs">FileStream</param>
	<param name="value">Texto</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.clsFile.defineSplitType(System.Object)">
	<summary>
 Define um caracter para ser usado como separador na função Split()
 </summary>
	<param name="splitType">Tipo de caracter a ser usado com separador (ENUM)</param>
	<returns>o caracter a ser usado como separador</returns>
	<remarks></remarks>
</member><member name="T:MobileConnection.clsFile.splitType">
	<summary>
 Tipos de caracteres que devem ser usados como separador
 </summary>
	<remarks></remarks>
</member><member name="M:MobileConnection.mdUtilitarios.preencheComboBox(System.Windows.Forms.ComboBox,System.String,System.Data.DataTable,System.String)">
	<summary>
 Preenche uma combo Utilizando um dataTable preenchido com um select na base de dados
 </summary>
	<param name="cb"></param>
	<param name="sql01"></param>
	<param name="dt"></param>
	<param name="columnName"></param>
	<remarks></remarks>
</member><member name="M:MobileConnection.mdUtilitarios.fillArrayListUsuarios(System.Data.DataTable,System.String)">
	<summary>
 Carrega um array list com objetos da classe clsUsuario
 </summary>
	<param name="dt">Data a ser preenchido com um commando Sql.</param>
	<param name="sql01">Comando SqlServer</param>
	<returns>Array List preenchido com objetos da classe clsUsuario</returns>
	<remarks></remarks>
</member><member name="M:MobileConnection.mdUtilitarios.DisplayAll(System.Object)">
	<summary>
 Loop em todas as propriedades da instância de um objeto
 </summary>
	<param name="obj">Objeto ao qual será feito o loop em seus Atributos(Propriedades)</param>
	<remarks></remarks>
</member><member name="M:MobileConnection.mdUtilitarios.validaComboBox(System.Windows.Forms.ComboBox,System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
	<summary>
 Valida o item selecionado na Combo e impede que o foco seja alterado caso
 o texto digitado não pertença aos itens contidos na combobox
 </summary>
	<param name="cb">ComboBox a ser verificado</param>
	<param name="control">Controle que recebera o foco após a válidação</param>
	<param name="eKey">tecla pressionada (o enter(13) é o validador)</param>
	<history>[Sebastiao Martins] 15/07/2015 Criado</history>
	<remarks>A validação do ComboBox ocorre quando a tecla ENTER(13) for passada no parametro eKey</remarks>
</member><member name="M:MobileConnection.mdUtilitarios.datagridDetail(System.Windows.Forms.DataGrid,System.Windows.Forms.MouseEventArgs,System.Windows.Forms.Label,System.Windows.Forms.Label,System.Windows.Forms.Label,System.Windows.Forms.Label)">
	<summary>
 Detalha os dados de um datagrid
 </summary>
	<param name="datagrid"> DataGrid</param>
	<param name="e">Evento</param>
	<param name="lbValor"></param>
	<param name="lbRow"></param>
	<param name="lbColuna"></param>
	<param name="lbTipo"></param>
	<remarks></remarks>
</member>
</members>
</doc>